// Code generated by goa v3.3.1, DO NOT EDIT.
//
// InjectiveSpotExchangeRPC gRPC client
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-exchange/api/design -o ../

package client

import (
	"context"

	injective_spot_exchange_rpcpb "github.com/InjectiveLabs/injective-exchange/api/gen/grpc/injective_spot_exchange_rpc/pb"
	injectivespotexchangerpc "github.com/InjectiveLabs/injective-exchange/api/gen/injective_spot_exchange_rpc"
	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient
	opts    []grpc.CallOption
}

// StreamMarketsClientStream implements the
// injectivespotexchangerpc.StreamMarketsClientStream interface.
type StreamMarketsClientStream struct {
	stream injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPC_StreamMarketsClient
}

// StreamOrderbookClientStream implements the
// injectivespotexchangerpc.StreamOrderbookClientStream interface.
type StreamOrderbookClientStream struct {
	stream injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPC_StreamOrderbookClient
}

// StreamOrdersClientStream implements the
// injectivespotexchangerpc.StreamOrdersClientStream interface.
type StreamOrdersClientStream struct {
	stream injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPC_StreamOrdersClient
}

// StreamTradesClientStream implements the
// injectivespotexchangerpc.StreamTradesClientStream interface.
type StreamTradesClientStream struct {
	stream injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPC_StreamTradesClient
}

// NewClient instantiates gRPC client for all the InjectiveSpotExchangeRPC
// service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: injective_spot_exchange_rpcpb.NewInjectiveSpotExchangeRPCClient(cc),
		opts:    opts,
	}
}

// Markets calls the "Markets" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) Markets() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildMarketsFunc(c.grpccli, c.opts...),
			EncodeMarketsRequest,
			DecodeMarketsResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// Market calls the "Market" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) Market() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildMarketFunc(c.grpccli, c.opts...),
			EncodeMarketRequest,
			DecodeMarketResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// StreamMarkets calls the "StreamMarkets" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) StreamMarkets() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildStreamMarketsFunc(c.grpccli, c.opts...),
			EncodeStreamMarketsRequest,
			DecodeStreamMarketsResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// Orderbook calls the "Orderbook" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) Orderbook() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildOrderbookFunc(c.grpccli, c.opts...),
			EncodeOrderbookRequest,
			DecodeOrderbookResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// StreamOrderbook calls the "StreamOrderbook" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) StreamOrderbook() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildStreamOrderbookFunc(c.grpccli, c.opts...),
			EncodeStreamOrderbookRequest,
			DecodeStreamOrderbookResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// Orders calls the "Orders" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) Orders() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildOrdersFunc(c.grpccli, c.opts...),
			EncodeOrdersRequest,
			DecodeOrdersResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// StreamOrders calls the "StreamOrders" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) StreamOrders() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildStreamOrdersFunc(c.grpccli, c.opts...),
			EncodeStreamOrdersRequest,
			DecodeStreamOrdersResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// Trades calls the "Trades" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) Trades() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildTradesFunc(c.grpccli, c.opts...),
			EncodeTradesRequest,
			DecodeTradesResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// StreamTrades calls the "StreamTrades" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) StreamTrades() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildStreamTradesFunc(c.grpccli, c.opts...),
			EncodeStreamTradesRequest,
			DecodeStreamTradesResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// SubaccountOrdersList calls the "SubaccountOrdersList" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) SubaccountOrdersList() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSubaccountOrdersListFunc(c.grpccli, c.opts...),
			EncodeSubaccountOrdersListRequest,
			DecodeSubaccountOrdersListResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// SubaccountTradesList calls the "SubaccountTradesList" function in
// injective_spot_exchange_rpcpb.InjectiveSpotExchangeRPCClient interface.
func (c *Client) SubaccountTradesList() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSubaccountTradesListFunc(c.grpccli, c.opts...),
			EncodeSubaccountTradesListRequest,
			DecodeSubaccountTradesListResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// Recv reads instances of
// "injective_spot_exchange_rpcpb.StreamMarketsResponse" from the
// "streamMarkets" endpoint gRPC stream.
func (s *StreamMarketsClientStream) Recv() (*injectivespotexchangerpc.StreamMarketsResult, error) {
	var res *injectivespotexchangerpc.StreamMarketsResult
	v, err := s.stream.Recv()
	if err != nil {
		return res, err
	}
	if err = ValidateStreamMarketsResponse(v); err != nil {
		return res, err
	}
	return NewStreamMarketsResult(v), nil
}

// Recv reads instances of
// "injective_spot_exchange_rpcpb.StreamOrderbookResponse" from the
// "streamOrderbook" endpoint gRPC stream.
func (s *StreamOrderbookClientStream) Recv() (*injectivespotexchangerpc.StreamOrderbookResult, error) {
	var res *injectivespotexchangerpc.StreamOrderbookResult
	v, err := s.stream.Recv()
	if err != nil {
		return res, err
	}
	if err = ValidateStreamOrderbookResponse(v); err != nil {
		return res, err
	}
	return NewStreamOrderbookResult(v), nil
}

// Recv reads instances of "injective_spot_exchange_rpcpb.StreamOrdersResponse"
// from the "streamOrders" endpoint gRPC stream.
func (s *StreamOrdersClientStream) Recv() (*injectivespotexchangerpc.StreamOrdersResult, error) {
	var res *injectivespotexchangerpc.StreamOrdersResult
	v, err := s.stream.Recv()
	if err != nil {
		return res, err
	}
	if err = ValidateStreamOrdersResponse(v); err != nil {
		return res, err
	}
	return NewStreamOrdersResult(v), nil
}

// Recv reads instances of "injective_spot_exchange_rpcpb.StreamTradesResponse"
// from the "streamTrades" endpoint gRPC stream.
func (s *StreamTradesClientStream) Recv() (*injectivespotexchangerpc.StreamTradesResult, error) {
	var res *injectivespotexchangerpc.StreamTradesResult
	v, err := s.stream.Recv()
	if err != nil {
		return res, err
	}
	if err = ValidateStreamTradesResponse(v); err != nil {
		return res, err
	}
	return NewStreamTradesResult(v), nil
}
