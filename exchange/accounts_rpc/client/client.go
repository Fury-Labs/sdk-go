// Code generated by goa v3.3.1, DO NOT EDIT.
//
// InjectiveAccountsRPC gRPC client
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-exchange/api/design -o ../

package client

import (
	"context"

	injective_accounts_rpcpb "github.com/InjectiveLabs/injective-exchange/api/gen/grpc/injective_accounts_rpc/pb"
	injectiveaccountsrpc "github.com/InjectiveLabs/injective-exchange/api/gen/injective_accounts_rpc"
	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli injective_accounts_rpcpb.InjectiveAccountsRPCClient
	opts    []grpc.CallOption
}

// StreamSubaccountBalanceClientStream implements the
// injectiveaccountsrpc.StreamSubaccountBalanceClientStream interface.
type StreamSubaccountBalanceClientStream struct {
	stream injective_accounts_rpcpb.InjectiveAccountsRPC_StreamSubaccountBalanceClient
}

// NewClient instantiates gRPC client for all the InjectiveAccountsRPC service
// servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: injective_accounts_rpcpb.NewInjectiveAccountsRPCClient(cc),
		opts:    opts,
	}
}

// SubaccountsList calls the "SubaccountsList" function in
// injective_accounts_rpcpb.InjectiveAccountsRPCClient interface.
func (c *Client) SubaccountsList() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSubaccountsListFunc(c.grpccli, c.opts...),
			EncodeSubaccountsListRequest,
			DecodeSubaccountsListResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// SubaccountBalancesList calls the "SubaccountBalancesList" function in
// injective_accounts_rpcpb.InjectiveAccountsRPCClient interface.
func (c *Client) SubaccountBalancesList() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSubaccountBalancesListFunc(c.grpccli, c.opts...),
			EncodeSubaccountBalancesListRequest,
			DecodeSubaccountBalancesListResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// SubaccountBalanceEndpoint calls the "SubaccountBalanceEndpoint" function in
// injective_accounts_rpcpb.InjectiveAccountsRPCClient interface.
func (c *Client) SubaccountBalanceEndpoint() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSubaccountBalanceEndpointFunc(c.grpccli, c.opts...),
			EncodeSubaccountBalanceEndpointRequest,
			DecodeSubaccountBalanceEndpointResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// StreamSubaccountBalance calls the "StreamSubaccountBalance" function in
// injective_accounts_rpcpb.InjectiveAccountsRPCClient interface.
func (c *Client) StreamSubaccountBalance() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildStreamSubaccountBalanceFunc(c.grpccli, c.opts...),
			EncodeStreamSubaccountBalanceRequest,
			DecodeStreamSubaccountBalanceResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// SubaccountHistory calls the "SubaccountHistory" function in
// injective_accounts_rpcpb.InjectiveAccountsRPCClient interface.
func (c *Client) SubaccountHistory() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSubaccountHistoryFunc(c.grpccli, c.opts...),
			EncodeSubaccountHistoryRequest,
			DecodeSubaccountHistoryResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// Recv reads instances of
// "injective_accounts_rpcpb.StreamSubaccountBalanceResponse" from the
// "streamSubaccountBalance" endpoint gRPC stream.
func (s *StreamSubaccountBalanceClientStream) Recv() (*injectiveaccountsrpc.StreamSubaccountBalanceResult, error) {
	var res *injectiveaccountsrpc.StreamSubaccountBalanceResult
	v, err := s.stream.Recv()
	if err != nil {
		return res, err
	}
	if err = ValidateStreamSubaccountBalanceResponse(v); err != nil {
		return res, err
	}
	return NewStreamSubaccountBalanceResult(v), nil
}
